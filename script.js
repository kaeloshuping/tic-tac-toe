const gameBoard = (() => {
    const gameBoardArray = [];
    let gameContainer = document.getElementById("game-container");

    for (let i = 1; i < 10; i++) {
        let box = document.createElement("div");
        box.id = i;
        box.className = "option-box";
        gameBoardArray.push(box);
    };

    for (let i = 0; i < gameBoardArray.length; i++) {
        gameContainer.appendChild(gameBoardArray[i]);
    };

    return { gameBoardArray };
})();

const displayController = (() => {
    let optionBox = document.querySelectorAll(".option-box");
    optionBox.forEach((div) => {
        div.addEventListener("click", () => {
            if (div.innerHTML === "X") {
                console.log("Error, this box has already been clicked");
            } else {
                div.innerHTML = "X";
            };            
        });
    });
})();

// function drawGrid(rows, cols) {
//     gridContainer.style.setProperty('--grid-rows', rows);
//     gridContainer.style.setProperty('--grid-cols', cols);
//     for (c = 0; c < (rows * cols); c++) {
//       let cell = document.createElement("div");
//       cell.id = "grid-item";
//       // add event listener to each cell
//       cell.addEventListener('mouseover', () => {
//         // if event listener is triggered, check condition of "eraserdivState"
//         if (eraserdivState == true) {
//           color = gridBackgroundColor;
//           draw(cell, color);
//         }
//         // check condition for "rainbowModeBtnState" and if "true" generate random colour
//         else if (rainbowModeBtnState == true) {
//           generateRandomColour();
//           draw(cell, "#" + color);
//         } 
//         // if all conditions fail, use colour generated by the "Pen Color"
//         else {
//           colour();
//           draw(cell, color);
//         };
//       });
//       gridContainer.appendChild(cell).className = "grid-item";
//     };
//   };
  
//   #grid-container {
//     background-color: white;
//     display: grid;
//     grid-template-rows: repeat(var(--grid-rows), 1fr);
//     grid-template-columns: repeat(var(--grid-cols), 1fr);
//     width: 500px;
//     height: 500px;
//   }